1:
  status: disregarded
  argument: The application uses Zuul as a gateway server, however, the application exposes all microservices with network-bridged docker ports. For this rule to apply, only the edge server may be exposed or an additional access restriction has to be deployed.
  artifacts:
    - file: docker-compose.yml
      lines: [7, 16, 30, 44, 82, 93]

2:
  status: disregarded
  argument: Services communicate internally over plain HTTP (See example artifacts). The communication is not authenticated.
  artifacts:
    - file: docker-compose.yml
      lines: [7, 16, 30, 44, 82, 93]

3:
  status: disregarded
  argument: No authentication mechanism is deployed.

4:
  status: disregarded
  argument: External entities are not represented in the application. Users behave transparent to the server. Note, that the server has a user-service, that is not used for authentication purposes.

5:
  status: disregarded
  argument: No authentication tokens are used.

6:
  status: disregarded
  argument: No rate limiting of any means is deployed.

7:
  status: disregarded
  argument: User external entities can call the gateway service using an unencrypted HTTP connection.
  artifacts:
    - file: docker-compose.yml
      lines: [7, 16, 30, 44, 82, 93]

8:
  status: disregarded
  argument: All internal services communicate over insecure HTTP connections.
  artifacts:
    - file: docker-compose.yml
      lines: [7, 16, 30, 44, 82, 93]

9:
  status: disregarded
  argument: No central logging system is deployed.

10:
  status: disregarded
  argument: No central logging system is deployed.

11:
  status: disregarded
  argument: No logs are generated by the application.

12:
  status: disregarded
  argument: RabbitMQ is deployed as a message broker between the circuit breaker and the monitoring server. It does not handle logging nor is the traffic encrypted and authenticated.

13:
  status: disregarded
  argument: Hystrix is deployed as a circuit breaker, however it is not deployed on the gateway server, but in the service application. Several requests are able to pass through the gateway to internal services without circuit breaking (see artifacts).
  artifacts:
    - file: card-service/src/main/java/com/spring/netflix/oss/microservices/CardServiceApplication.java
      lines: [8]
    - file: statement-service/src/main/java/com/spring/netflix/oss/microservices/StatementServiceApplication.java
      lines: [8]

14:
  status: observed
  argument: The gateway server uses load balancing via Ribbon to access dependent services.
  artifacts:
    - file: edge-server/src/main/java/com/spring/netflix/oss/microservices/EdgeServerApplication.java
      lines: [10]

15:
  status: not applicable
  argument: Not a service mesh deployment.

16:
  status: observed
  argument:
    - Registry Service (Eureka Server) with @EnableEurekaServer present.
    - Started in Docker Container through Compose, thus deployable on dedicated server
  artifacts:
    - file: discovery-service/src/main/java/com/spring/netflix/oss/microservices/DiscoveryServiceApplication.java
      lines: [8]
    - file: docker-compose.yml
      lines: [12]

17:
  status: disregarded
  argument: No HTTP basic password listed in any YML-Configuration of format username:password@here-location-of-eureka-server at "eureka.client.serviceUrl.defaultZone".
  artifacts:
    - file: discovery-service/src/main/java/com/spring/netflix/oss/microservices/DiscoveryServiceApplication.java
      lines: [8]
    - file: MASTER/card-service.yml
      lines: [8]
      repository: fernandoabcampos/microservices-config

18:
  status: disregarded
  argument: No secret manager is deployed. The deployed git configuration server is not a secrets manager.
  artifacts:
    - file: config-server/src/main/java/com/spring/netflix/oss/microservices/ConfigServerApplication.java
      lines: [8]
